openapi: 3.0.0
info:
  title: ScryForge API
  description: API for detecting and classifying colored bases in images
  version: 1.0.0
  contact:
    email: [your-email]
servers:
  - url: https://theforgerealm.com/scryforge  
    description: Production server
  - url: http://localhost:8000
    description: Local development server
paths:
  /scryforge:
    get:
      summary: API Status Check
      description: Returns the current status of the ScryForge API
      responses:
        '200':
          description: API is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "ScryForge API is running"

  /healthz:
    get:
      summary: Health Check
      description: Simple health check endpoint
      responses:
        '200':
          description: Service is healthy
          content:
            text/plain:
              schema:
                type: string
                example: "OK"

  /scryforge/api/v1/image/arucolocations:
    post:
      summary: Detect ArUco marker positions in an image
      description: |
        Detects ArUco markers (IDs 0-3) in the provided image and returns their positions.
        Markers should be placed in clockwise order - ID 0 (top-left), ID 1 (top-right),
        ID 2 (bottom-right), ID 3 (bottom-left).
        **Rate Limited:** 20 requests per second
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Image file to analyze
      responses:
        '200':
          description: Successful detection
          content:
            application/json:
              schema:
                type: object
                properties:
                  positions:
                    type: object
                    properties:
                      top_left:
                        type: array
                        items:
                          type: number
                        description: [x, y] coordinates of top-left marker
                      top_right:
                        type: array
                        items:
                          type: number
                        description: [x, y] coordinates of top-right marker
                      bottom_right:
                        type: array
                        items:
                          type: number
                        description: [x, y] coordinates of bottom-right marker
                      bottom_left:
                        type: array
                        items:
                          type: number
                        description: [x, y] coordinates of bottom-left marker
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Authentication error message
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Rate limit error message

  /scryforge/api/v1/image/categories/positions:
    post:
      summary: Detect bases in an image
      description: |
        Detects and classifies colored bases in the provided image.
        Returns positions and categories of detected bases.
        **Rate Limited:** 2 requests per second
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Image file to analyze
      responses:
        '200':
          description: Successful detection
          content:
            application/json:
              schema:
                type: object
                properties:
                  positions:
                    type: array
                    items:
                      type: object
                      properties:
                        category:
                          type: string
                          enum: [red, blue, green, violet, yellow, orange, turquoise, pink, white, black]
                          description: Detected base category
                        x:
                          type: integer
                          description: X coordinate in pixels
                        y:
                          type: integer
                          description: Y coordinate in pixels
                        width:
                          type: integer
                          description: Width in pixels
                        height:
                          type: integer
                          description: Height in pixels
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Authentication error message
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Rate limit error message
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Service unavailable message

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT token required for authentication. 
        Include the token in the Authorization header as "Bearer <token>"
  
  schemas: {} 